name: MQ ACE CP4I OCP CI/CD Pipeline.
on:
  push:
    branches:
      - main
jobs:
  deploy-dev:
    runs-on: 'self-hosted'
    environment: 'dev'
    needs: cheeck-and-create-qm
    steps:
     - name: Checkout code
       uses: actions/checkout@v2
     - name: Execute Queue Manager Cleanup Script
       shell: bash
       id: execute-cleanup-script #
       continue-on-error: true
       run: |
        bash cleanup.sh ${{ vars.NAMESPACE }} ${{ vars.IS_NAME }}
        echo "exit-code=$?" >> $GITHUB_STATE
        echo "exit-code=$?" >> $GITHUB_OUTPUT
        echo "$?"
        echo "${{ steps.execute-cleanup-script.outputs.exit-code == '0' }}"
     - name: Checking & Creating Queue Manager
       shell: bash
       id: execute-script
       continue-on-error: true
       run: |
        bash deploy-qm.sh ${{ vars.NAMESPACE }} ${{ vars.IS_NAME }}
        echo "exit-code=$?" >> $GITHUB_STATE
        echo "exit-code=$?" >> $GITHUB_OUTPUT
        echo "$?"
        echo "${{ steps.execute-script.outputs.exit-code == '0' }}"
     - name: Take action based on exit code
       if: ${{ steps.execute-script.outputs.exit-code == '0' }}
       run: echo "Queue Manager was created succeeded"
  deploy-uat:
    runs-on: 'self-hosted'
    environment: 'uat'
    needs: [cheeck-and-create-qm, deploy-dev]
    steps:
     - name: Checkout code
       uses: actions/checkout@v2
     - name: Execute Queue Manager Cleanup Script
       shell: bash
       id: execute-cleanup-script
       continue-on-error: true
       run: |
        bash cleanup.sh ${{ vars.NAMESPACE }} ${{ vars.IS_NAME }}
        echo "exit-code=$?" >> $GITHUB_STATE
        echo "exit-code=$?" >> $GITHUB_OUTPUT
        echo "$?"
        echo "${{ steps.execute-cleanup-script.outputs.exit-code == '0' }}"
     - name: Checking & Creating Queue Manager
       shell: bash
       id: execute-script
       continue-on-error: true
       run: |
        bash deploy-qm.sh ${{ vars.NAMESPACE }} ${{ vars.IS_NAME }}
        echo "exit-code=$?" >> $GITHUB_STATE
        echo "exit-code=$?" >> $GITHUB_OUTPUT
        echo "$?"
        echo "${{ steps.execute-script.outputs.exit-code == '0' }}"
     - name: Take action based on exit code
       if: ${{ steps.execute-script.outputs.exit-code == '0' }}
       run: echo "Queue Manager was created succeeded"
  deploy-prod:
    runs-on: 'self-hosted'
    environment: 'prod'
    needs: [cheeck-and-create-qm, deploy-dev,deploy-uat]
    steps:
      - name: Deploy in Production
        run: echo "Prodcution Deployment Done Successfully"

  cheeck-and-create-qm:
   runs-on: self-hosted
   steps:
     - name: Checkout code
       uses: actions/checkout@v2
     - name: Checking & Creating Queue Manager
       shell: bash
       id: execute-script
       continue-on-error: true
       run: |
        bash deploy-qm.sh ${{ vars.NAMESPACE }} ${{ vars.IS_NAME }}
        echo "exit-code=$?" >> $GITHUB_STATE
        echo "exit-code=$?" >> $GITHUB_OUTPUT
        echo "$?"
        echo "Namespace: ${{ vars.NAMESPACE }}"
        echo "JOB: ${{ github.job }}"
        echo "RunNumber: ${{ github.run_number }}"
        echo "RUNID: ${{ github.run_id }}"
        echo "${{ steps.execute-script.outputs.exit-code == '0' }}"
     - name: Take action based on exit code
       if: ${{ steps.execute-script.outputs.exit-code == '0' }}
       run: echo "Queue Manager was created succeeded"
     - name: Notify on failure
       if: ${{ steps.execute-script.outputs.exit-code != '0' }}
       run: echo "There is an issue with creating Queue Manager"
     - name: Create Release
       id: create_release
       uses: actions/create-release@v1
       env:
         GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
       with:
         tag_name: ${{ github.ref }}
         release_name: Release ${{ github.ref }}
         draft: false
         prerelease: false
     - name: Upload Release Asset
       id: upload-release-asset 
       uses: actions/upload-release-asset@v1
       env:
         GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
       with:
         upload_url: ${{ steps.create_release.outputs.upload_url }} 
         asset_path: ./deploy-ace-server.sh
         asset_name: deploy-ace-server.sh
         asset_content_type: application/sh
     - name: Send mail
       if: ${{ steps.execute-script.outputs.exit-code == '0' }}
       uses: dawidd6/action-send-mail@v3
       with:
         connection_url: smtp://bharathmanikanta.gundapu@eidiko-india.com:Bharathg@123@mail.eidiko-india.com:587
         #connection_url: smtp+starttls://user:password@mail.eidiko-india.com:587
         server_address: mail.eidiko-india.com
         server_port: 587
         secure: true
         subject: Github Actions MQ Deployed Successfully
         to: bharathmanikanta.gundapu@eidiko-india.com,tirapareddy.tondapu@eidiko.com
         from: Tirapa Reddy Tondapu 
         body: Build job of ${{github.repository}} completed successfully! \n Queue Manager Was Deployed Succssfully!!
         cc: bharathmanikanta.gundapu@eidiko-india.com
         bcc: bharathmanikanta.gundapu@eidiko-india.com
         reply_to: bharathmanikanta.gundapu@eidiko-india.com
         in_reply_to: bharathmanikanta.gundapu@eidiko-india.com
         ignore_cert: true
         convert_markdown: true
         attachments: attachments.zip,git.diff,./dist/static/*.js
         priority: low

       
 
